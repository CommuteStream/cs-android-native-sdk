apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

ext {
    bintrayRepo = 'commutestream-sdk'
    bintrayName = 'commutestream-nativeads'
    bintrayOrg = 'commutestream'


    publishGroup = 'com.commutestream.nativeads'
    publishArtifact = 'commutestream-nativeads'

    libraryName = 'CommuteStream SDK for Native Ads'
    libraryVersion = '1.2.7'
    libraryDescription = 'SDK that This allows you to add CommuteStream native ads to your app'

    siteUrl = 'https://github.com/commutestream/cs-android-native-sdk'
    gitUrl = 'https://github.com/commutestream/cs-android-native-sdk.git'

    developerId = ''
    developerName = 'CommuteStream'
    developerEmail = 'support@commutestream.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

version libraryVersion
group publishGroup

def pomConfig = {
    // Set your license
    licenses {
        license {
            name licenseName
            url licenseUrl
        }
    }
    developers {
        developer {
            id developerId
            name developerName
            email developerEmail
        }
    }
    scm {
        connection gitUrl
        developerConnection gitUrl
        url siteUrl
    }
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/commutestream-nativeads-release.aar")
            groupId publishGroup
            artifactId publishArtifact
            version libraryVersion
            description libraryDescription

            pom.withXml {
                def root = asNode()
                root.appendNode('description', libraryDescription)
                root.appendNode('name', libraryName)
                root.appendNode('url', siteUrl)
                root.children().last() + pomConfig
                def dependenciesNode = root.appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }

            }
        }
    }
}



bintray {
    user = project.hasProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ?: System.getenv('BINTRAY_KEY')
    publications = ['Production']
    configurations = ['archives']
    override = true
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        dryRun = false
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = System.getenv("BINTRAY_GPG_PASSPHRASE")
                //Optional. The passphrase for GPG signing'
            }
            name = libraryVersion
            desc = "${libraryVersion}"
            released = new Date()
            vcsTag = libraryVersion
        }
    }
}

if(System.getenv("BINTRAY_ORG")) {
    bintray.pkg.userOrg = System.getenv("BINTRAY_ORG")
}

bintrayUpload.dependsOn("assembleRelease")